type User {
  code: String!
  name: String!
  password: String!
  token: String!
}

input NewUser {
  name: String!
  password: String!
}

type Memo {
  owner: String!
  code: String!
  title: String!
  text: String!
  tag: String!
  time: String!
}

input NewMemo {
  token: String!
  title: String!
  text: String!
  tag: [String!]!
}

input EditMemo {
  token: String!
  memoCode: String!
  title: String!
  text: String!
  tag: [String!]!
}

input RemoveMemo {
  token: String!
  memoCode: String!
}

type Mutation {
  createUser(input: NewUser!): User!
  createMemo(input: NewMemo!): Memo!
  editMemo(input: EditMemo!): Memo!
  removeMemo(input: RemoveMemo!): Memo!
}

input GetUser {
  name: String!
  password: String!
}

input GetAllMemo {
  token: String!
}

type AllMemo {
  memos: [Memo!]
}

input Auth {
  token: String!
}

type Query {
  getUser(input: GetUser!): User
  getAllMemo(input: GetAllMemo!): AllMemo
  auth(input: Auth!): String
}
