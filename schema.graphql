type User {
  code: String!
  name: String!
  password: String!
  token: String!
}

input NewUser {
  name: String!
  password: String!
}

type Memo {
  owner: String!
  code: String!
  hash: String!
  title: String!
  text: String!
  tag: String!
}

input NewMemo {
  owner: String!
  token: String!
  title: String!
  text: String!
  tag: [String!]!
}

type Mutation {
  createUser(input: NewUser!): User!
  createMemo(input: NewMemo!): Memo!
}

input GetUser {
  code: String!
  password: String!
}

input GetAllMemo {
  owner: String!
  token: String!
}

type AllMemo {
  memos: [Memo!]
}

type Query {
  getUser(input: GetUser!): User
  getAllMemo(input: GetAllMemo!): AllMemo
}
